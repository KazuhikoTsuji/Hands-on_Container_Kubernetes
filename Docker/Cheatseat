##Stage0 GCPへのアクセス
  #GCPへのアクセス
    https://cloud.google.com/

##Stage1 docker hubへのアクセス
  #docker hubへのアクセス

    https://hub.docker.com/
    
  #docker hubアカウントのサインアップ

##Stage2 NGINXコンテナのデプロイ

  #Step1: docker run コマンドでコンテナを作成
    -コンテナのデプロイ
      $ docker run --name nginx-container -p 8080:80 -d nginx:1.17.6

    -デプロイしたコンテナの確認
      $ docker ps

  #Step2: デプロイしたNGINXコンテナへクライアントからアクセス
  
    -外部IPアドレスの確認
      各参加者のNOに応じたVMインスタンスの外部IPを確認

    -クライアントブラウザから外部IPアドレス:8080へアクセス
    または
    -Google Cloud Shellから外部IPアドレス:8080へアクセス
      $ curl http://<外部IP>:8080/

##Stage3 イメージビルド
  #Step1: ビルドに使用するディレクトリとファイルの準備
  
    -ビルド作業用ディレクトリの作成、ディレクトリ移動
      $ mkdir docker-build && cd $_

    -Dockerfileの作成
      $ vi Dockerfile

         FROM nginx:1.17.6
        COPY index.html /usr/share/nginx/html/

      :wq

    -index.htmlの作成
      $ vi index.html

    #↓好きな文字列を記入

        Hello World!

      :wq

    -ディレクトリに2つのファイル(Dockerfile, index.html)が存在することを確認
      $ ls

  #Step2: ビルドの実行
  
    -ビルドの実行
      $ docker build -t <自分のリポジトリ名>/myimage:v01 .
 
  #Step3: docker run コマンドでコンテナを作成
  
    -コンテナのデプロイ
      $ docker run --name myimage-container -p 8081:80 -d <自分のリポジトリ名>/myimage:v01

    -デプロイしたコンテナの確認
      $ docker ps
      
   #Step4: デプロイしたコンテナへクライアントからアクセス

    -クライアントブラウザから外部IPアドレス:8081へアクセス
    または
    -Google Cloud Shellから外部IPアドレス:8081へアクセス
      $ curl http://<外部IP>:8081/

    #Step5: ビルドしたイメージをdocker hubの自分のプライベートリポジトリにpush

      -docker hubにログイン
        $ docker login

      -ビルドしたイメージを自分のプライベートリポジトリにpush
        $ docker push <自分のリポジトリ名>/myimage:v01

      -docker hubの自分のプライベートリポジトリにイメージがpushされていることを確認

      -作成されたプライベートリポジトリをパブリックに公開

    #Step6: 自分のプライベートリポジトリからイメージをpull
    
      -稼働中のコンテナを確認
        $ docker ps
      
      -myimage-containerを停止
        $ docker stop myimage-container
      
      -全てのコンテナを確認
        $ docker ps -a

      -myimage-containerを削除
        $ docker rm myimage-container
        
      -全てのコンテナを確認
        $ docker ps -a

      -ローカルに保持しているイメージを確認
        $ docker images

      -イメージ <自分のリポジトリ>/myimage:v01を削除
        $ docker image rm kazuhikotsuji/myimage:v01

      -ローカルに保持しているイメージを確認
        $ docker images

    #Step7: docker run コマンドでコンテナを作成
    
      -再度myimage-containerコンテナのデプロイ
        $ docker run --name myimage-container -p 8081:80 -d <自分のリポジトリ名>/myimage:v01

      -デプロイしたコンテナの確認
        $ docker ps

      -pullしたイメージの確認
        $ docker images

    #Step8: デプロイしたコンテナへクライアントからアクセス

    -クライアントブラウザから外部IPアドレス:8081へアクセス
    または
    -Google Cloud Shellから外部IPアドレス:8081へアクセス
      $ curl http://<外部IP>:8081/
